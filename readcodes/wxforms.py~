#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.4 on Sat Dec  1 07:33:35 2012

import wx
from models import ReadCode,Term
from django.utils.datastructures import SortedDict

# begin wxGlade: extracode
# end wxGlade

def flatten(l):
  out = []
  for item in l:
    if isinstance(item, (list, tuple)):
      out.extend(flatten(item))
    else:
      out.append(item)
  return out

def PopulateTree(tree,item,codes):
   	tree.DeleteChildren(item)
   	if codes:
		for x in codes:
			new_item = tree.AppendItem(item,unicode(x))
			tree.SetItemPyData(new_item,x)
			tree.SetItemHasChildren(new_item)
	else:
		tree.SetItemHasChildren(item,False)
		   	
class ReadCodeBrowser(wx.Dialog):
    def __init__(self, *args, **kwds):
    	self.preferred_codes = kwds.pop('preferred_codes', None)
        # begin wxGlade: ReadCodeBrowser.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE | wx.RESIZE_BORDER | wx.MAXIMIZE_BOX | wx.THICK_FRAME
        wx.Dialog.__init__(self, *args, **kwds)
        self.search_text = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.search_button = wx.Button(self, wx.ID_FIND, "")
        self.search_results = wx.ListBox(self, -1, choices=[], style=wx.LB_SINGLE)
        self.sizer_10_staticbox = wx.StaticBox(self, -1, "Search Results")
        self.selected_code = wx.StaticText(self, -1, "Selected code:")
        self.children_tree = wx.TreeCtrl(self, -1, style=wx.TR_HAS_BUTTONS | wx.TR_NO_LINES | wx.TR_HIDE_ROOT | wx.TR_HAS_VARIABLE_ROW_HEIGHT | wx.TR_DEFAULT_STYLE | wx.SUNKEN_BORDER)
        self.sizer_7_staticbox = wx.StaticBox(self, -1, "Children")
        self.parents_tree = wx.TreeCtrl(self, -1, style=wx.TR_HAS_BUTTONS | wx.TR_NO_LINES | wx.TR_HIDE_ROOT | wx.TR_HAS_VARIABLE_ROW_HEIGHT | wx.TR_DEFAULT_STYLE | wx.SUNKEN_BORDER)
        self.sizer_8_staticbox = wx.StaticBox(self, -1, "Parents")
        self.ok_button = wx.Button(self, wx.ID_OK, "")
        self.button_2 = wx.Button(self, wx.ID_CANCEL, "")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TEXT_ENTER, self.SearchCode, self.search_text)
        self.Bind(wx.EVT_BUTTON, self.SearchCode, self.search_button)
        self.Bind(wx.EVT_LISTBOX_DCLICK, self.SelectListCode, self.search_results)
        self.Bind(wx.EVT_TREE_ITEM_ACTIVATED, self.SelectTreeCode, self.children_tree)
        self.Bind(wx.EVT_TREE_ITEM_EXPANDED, self.ExpandChild, self.children_tree)
        self.Bind(wx.EVT_TREE_ITEM_ACTIVATED, self.SelectTreeCode, self.parents_tree)
        self.Bind(wx.EVT_TREE_ITEM_EXPANDED, self.ExpandParent, self.parents_tree)
        # end wxGlade
        self.children_tree.AddRoot("")
        self.parents_tree.AddRoot("")
        

    def __set_properties(self):
        # begin wxGlade: ReadCodeBrowser.__set_properties
        self.SetTitle("Read Code Browser")
        self.SetSize((683, 383))
        self.ok_button.Enable(False)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ReadCodeBrowser.__do_layout
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_9 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_8_staticbox.Lower()
        sizer_8 = wx.StaticBoxSizer(self.sizer_8_staticbox, wx.HORIZONTAL)
        self.sizer_7_staticbox.Lower()
        sizer_7 = wx.StaticBoxSizer(self.sizer_7_staticbox, wx.HORIZONTAL)
        self.sizer_10_staticbox.Lower()
        sizer_10 = wx.StaticBoxSizer(self.sizer_10_staticbox, wx.HORIZONTAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        label_1 = wx.StaticText(self, -1, "Search")
        sizer_5.Add(label_1, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL | wx.ADJUST_MINSIZE, 3)
        sizer_5.Add(self.search_text, 1, wx.ALL | wx.ADJUST_MINSIZE, 3)
        sizer_5.Add(self.search_button, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL | wx.ADJUST_MINSIZE, 3)
        sizer_4.Add(sizer_5, 0, wx.EXPAND, 0)
        sizer_10.Add(self.search_results, 1, wx.EXPAND | wx.ADJUST_MINSIZE, 0)
        sizer_4.Add(sizer_10, 1, wx.EXPAND, 0)
        sizer_4.Add(self.selected_code, 0, wx.ALL | wx.ADJUST_MINSIZE, 3)
        sizer_7.Add(self.children_tree, 1, wx.EXPAND, 0)
        sizer_6.Add(sizer_7, 1, wx.EXPAND, 0)
        sizer_8.Add(self.parents_tree, 1, wx.EXPAND, 0)
        sizer_6.Add(sizer_8, 1, wx.EXPAND, 0)
        sizer_4.Add(sizer_6, 1, wx.EXPAND, 0)
        sizer_9.Add(self.ok_button, 0, wx.ADJUST_MINSIZE, 0)
        sizer_9.Add(self.button_2, 0, wx.ADJUST_MINSIZE, 0)
        sizer_4.Add(sizer_9, 0, wx.ALIGN_RIGHT, 0)
        self.SetSizer(sizer_4)
        self.Layout()
        self.Centre()
        # end wxGlade
        

    def SelectCode(self, code):  # wxGlade: ReadCodeBrowser.<event_handler>
    	self.active_code = code
    	self.ok_button.Enable(True)
    	synonyms = code.get_extra_synonyms()
    	if synonyms:
    		self.selected_code.SetLabel('Selected code: %s (%s)' % (unicode(code),",".join([unicode(x) for x in synonyms])))
    	else:
	    	self.selected_code.SetLabel('Selected code: %s' % unicode(code))
    	parents = ReadCode.objects.filter(children__read_code=code)
    	PopulateTree(self.parents_tree,self.parents_tree.GetRootItem(),parents)
    	children = ReadCode.objects.filter(parents__parent_read_code=code).order_by('parents__list_order')
    	PopulateTree(self.children_tree,self.children_tree.GetRootItem(),children)
    	self.Refresh()
		
    def ExpandChild(self, event):  # wxGlade: ReadCodeBrowser.<event_handler>
    	item = event.GetItem()
    	children = ReadCode.objects.filter(parents__parent_read_code=self.children_tree.GetItemPyData(item)).order_by('parents__list_order')
    	PopulateTree(self.children_tree,event.GetItem(),children)

    def ExpandParent(self, event):  # wxGlade: ReadCodeBrowser.<event_handler>
    	item = event.GetItem()
    	parents = ReadCode.objects.filter(children__read_code=self.parents_tree.GetItemPyData(item))
    	PopulateTree(self.parents_tree,item,parents)

    def SearchCode(self, event):  # wxGlade: ReadCodeBrowser.<event_handler>
    	#get all matching codes
    	search_results_header = 'All other codes found...'
    	search_codes_list = list(ReadCode.objects.filter(concept_status='C'
    	                                        ).filter(synonyms__term_30__icontains=self.search_text.GetValue()
    	                                        ).distinct())
    	code_id_list = [x.code for x in search_codes_list]
    	final_codes = SortedDict()
    	for (k,v) in self.preferred_codes:
    		final_codes[k] = []
    	final_codes[search_results_header] = []
    	font = self.search_results.GetFont()
    	font.SetWeight(wx.FONTWEIGHT_BOLD)
    	for c in search_codes_list:
    		#first look in the preferred codes, and add it to that 
    		for (k,v) in self.preferred_codes:
    			if c.code in v:
    				final_codes[k].append(c)
    		#now look to see if it has any parents in the rest of the codes
    		parents = set(c.get_ancestor_codes().split(','))
    		parents.discard(c.code)
    		for parent in parents:
    			if parent in code_id_list:
    				#this code has a matching parent - do not include
    				break
    		else:
    			final_codes[search_results_header].append(c)
    	self.search_results.Clear()
    	for (k,v) in final_codes.items():
    		if final_codes[k]:
    			item  = self.search_results.Append(k)
    			self.search_results.SetItemFont(item,font)
    			for f in final_codes[k]:
    				self.search_results.Append(unicode(f),f)

    def SelectListCode(self, event):  # wxGlade: ReadCodeBrowser.<event_handler>
		self.SelectCode(event.GetClientData())		
		
    def SelectTreeCode(self, event):  # wxGlade: ReadCodeBrowser.<event_handler>
    	self.SelectCode(event.GetEventObject().GetItemPyData(event.GetItem()))
		
# end of class ReadCodeBrowser

